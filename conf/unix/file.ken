
[[base id=1101000000]]

[[question id=10]]
文件 [操作]

[[answer]]
  文件操作包括：
    查看文件列表：ls
    创建空文件：touch
    创建目录：mkdir
    查看文件内容：cat、less或者more
    修改文件目录权限：chmod
    修改文件目录owner：chown
    等等。。。


[[question id=11]]
  进入|改变 目录
  cd

[[answer]]
  cd 用于进入指定目录，命令格式为：
  [[cmd/]] cd [filepath]

  例如：
  cd /tmp  进入/tmp 目录
  cd ..  返回上一级目录
  cd ../..  返回上两级目录，以此类推
  cd -  返回上次所在的目录，这个很有用，推荐大家使用
  cd  不带参数的情况下，进入个人的主目录（个人HOME目录）
  cd ~user1  进入user1的主目录


[[question id=12]]
  显示|输出 工作|当前 目录
  pwd

[[answer]]
  pwd 用于显示当前工作目录：
  [[cmd/]] pwd


[[question id=20]]
  显示|列举 文件|目录
  ls

[[answer]]
 ls用于列举文件和目录，常用命令:
 显示详细文件列表：
 [[cmd/]] ls -l [filename]

 人性化地显示详细文件列表（文件大小显示非常直观）：
 [[cmd/]] ls -lh [filename]

 每行只列出一个文件/目录名（shell脚本中常用做法）：
 [[cmd/]] ls -1 [filename]

 ls -a 显示所有文件（包括隐藏文件)
 ls *[0-9]* 显示包含数字的文件名和目录名

 只列举子目录：
 ls -l | grep ^d

 [[answer uname=Linux]]
 在Linux下，ll 命令等价于 ls -l


[[question id=21]]
  只 显示|列举 目录

[[answer]]
 [[cmd/]] ls -l [filepath] | grep ^d


[[question id=22]]
  只 显示|列举 文件

[[answer]]
 [[cmd/]] ls -l [filepath] | grep ^-


[[question id=30]]
  删除 文件|目录
  rm

[[answer]]
 rm用于删除文件和目录，rm带上-r参数可以删除目录。常用命令:
 不询问删除文件：
 [[cmd/]] rm -f <filename>

 删除目录和子目录以及目录下的所有文件：
 [[cmd/]] rm -r <filepath>

 注意：文件和目录删除后不可恢复，请谨慎使用以上命令，尤其是rm -rf
       rm -rf 后面的filepath最好明确指定路径名称，尽量不要使用 *
       切勿尝试执行：rm -rf /


[[question id=40]]
  删除 空 目录
  rmdir

[[answer]]
 rmdir用于删除空目录，命令示例：
 [[cmd required/]] rmdir <filepath>


[[question id=45]]
  重命名|移动 文件|目录
  mv

[[answer]]
  使用 mv 重命名或者移动文件/目录到指定目录中。格式：
  [[cmd/]] mv -i <source> <dest>

  如果dest为目录，则执行移动操作，否则执行改名操作。
  -i 当目标文件存在时，提示是否覆盖
  -f 当目标文件存在时，直接覆盖
  注意：mv不带 -i 参数时，会强制覆盖已经存在的目标文件。


[[question id=48]]
  复制 文件
  cp

[[answer]]
  cp 用于复制文件或者目录，命令格式：
  [[cmd/]] cp <file1> <file2>

  cp dirname/* .  复制一个目录下的所有文件到当前工作目录

  cp 几个常见选项说明：
    -i 当目标文件存在时，提示是否覆盖
    -f 当目标文件存在时，直接覆盖
    -R 用于拷贝目录

  注意：cp 不带 -i 参数时，会强制覆盖已经存在的目标文件。


[[question id=49]]
  复制 目录

[[answer]]
  cp -R 用于复制目录及其所有子目录，命令格式：
  [[cmd/]] cp -R <path1> <path2>

  如果 path2不存在，则会自动创建path2，并将path1下的所有文件及子目录拷贝到path2。
  如果 path2已经存在，则path1及其子目录会复制到path2下，即：path2下会有个path1子目录。


[[question id=50]]
  时间 降序 文件|目录|显示|列举|ls

[[answer]]
 ls 带上参数-t即可，例如：
 [[cmd required/]] ls -lt [filename]


[[question id=60]]
  时间 升序 文件|目录|显示|列举|ls

[[answer]]
 ls 带上参数-rt即可，例如：
 [[cmd required/]] ls -lrt [filename]


[[question id=70]]
  文件|目录|ls 大小 降序 [显示|列举]

[[answer]]
 ls 带上参数-S即可，例如：
 [[cmd required/]] ls -lS [filename]


[[question id=80]]
  文件|目录|ls 大小 升序 [显示|列举]

[[answer]]
 ls 带上参数-rS即可，例如：
 [[cmd required/]] ls -lrS [filename]


[[question id=210]]
    创建 文件 [空]
    touch

[[answer]]
 [[cmd required/]] touch <filename>


[[question id=220]]
    创建 目录
    mkdir

[[answer]]
 mkdir 用于创建目录。命令格式：
 [[cmd required/]] mkdir <dirname>

 加上 -p 参数用于依次创建文件路径中不存在的目录，例如：
 [[cmd required/]] mkdir -p <filepath>


[[question id=300]]
    显示|输出 文件 内容
    cat
    less|more

[[answer]]
 显示文件内容的命令有：cat、vi或vim、less或more、head、tail等。
 显示整个文件内容：
 [[cmd /]] cat <filename>

 less或者more可以滚动查看文件内容，通常用于查看大文本文件（比vi或vim打开速度更快）：
 [[cmd /]] less <filename>


[[question id=310]]
 显示 文件 头部|开始
 head

[[answer]]
 head用于显示文件头部内容，默认显示10行，如：
 [[cmd /]] head <filename>

 可以通过 -n 参数指定显示行数，例如：
 [[cmd /]] head -n 100 <filename>


[[question id=320]]
 显示 文件 尾部|结束
 tail

[[answer]]
 tail用于显示文件尾部内容，默认显示10行，如：
 [[cmd /]] tail <filename>

 可以通过 -n参数指定显示行数，例如：
 [[cmd /]] tail -n 100 <filename>

 可以通过 -f 参数滚动显示文件内容，tail -f 通常用于查看日志文件，例如：
 [[cmd /]] tail -f <filename>


[[question id=330]]
 滚动|增量 查看|输出 文件 [内容]

[[answer]]
 tail 加上参数 -f 即可，例如：
 [[cmd /]] tail -f <filename>


[[question id=410]]
 修改|设置|增加 文件|目录 权限
 chmod

[[answer]]
 使用 chmod 修改文件或目录权限。例如：
 [[cmd /]] chmod 755 <filename>
 [[cmd /]] chmod 600 <filename>

 增加可执行权限：
 [[cmd /]] chmod +x <filename>

 如果要对一个目录及其子目录递归执行，加上 -R 参数即可。例如：
 [[cmd /]] chmod -R 755 <filename>


[[question id=420]]
 修改|设置 文件|目录 所有者
 chown

[[answer]]
 使用 chown 修改文件或目录所有者。常用命令格式如下：
 [[cmd /]] chown <user> <filepath>
 [[cmd /]] chown <user>:<group> <filepath>

 如果要对一个目录及其子目录递归执行，加上 -R 参数即可。例如：
 [[cmd /]] chown -R <user> <filepath>


